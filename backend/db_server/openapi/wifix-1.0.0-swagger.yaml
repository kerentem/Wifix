openapi: 3.0.0
info:
  version: 1.0.0
  title: WiFix API

servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/BARSELA/wifix/1.0.0

  - description: Router Server
    url: http://127.0.0.1:9285

  - description: DB Server
    url: http://18.200.177.9:8080

tags:
  - name: Admin
    description: WiFix admin endpoints
  - name: User
    description: WiFix user endpoints
  - name: Router
    description: WiFix user endpoints

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ApiResponse:
      type: object
      properties:
        data:
          type: object
        error:
          type: boolean
        error_message:
          type: string
        message:
          type: string

  examples:
    UserRegisterResponseExample:
      value:
        data: null
        error: false
        error_message: null
        message: "User registered successfully"

    UserLoginResponseExample:
      value:
        data:
          is_email_registered: true
        error: false
        error_message: null
        message: ""

    UserStartWifiSessionResponseExample:
      value:
        data: null
        error: false
        error_message: null
        message: "Added WiFi session to user: bs52952@gmail.com successfully"

    UserIsWifiSessionExpiredResponseExample:
      value:
        data:
          is_expired: false
        error: false
        error_message: null
        message: "Wifi session is not expired for email: bs52952@gmail.com"

    UserWifiSessionTimeLeft:
      value:
        data:
          end_session_time_timestamp: 1681547401
        error: false
        error_message: null
        message: ""


    AdminRegisterResponseExample:
      value:
        data: null
        error: false
        error_message: null
        message: "Admin registered successfully"

    AdminLoginResponseExample:
      value:
        data:
          is_email_registered: true
        error: false
        error_message: null
        message: ""

    AdminGetCurrentBalanceResponseExample:
      value:
        data:
          dan: sela
        error: true
        error_message: aaaaaa
        message: ""

paths:
  /register:
    post:
      tags:
        - User
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                full_name:
                  type: string
                password:
                  type: string
                email:
                  type: string
                  format: email
              required:
                - full_name
                - password
                - email
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - "$ref": "#/components/schemas/ApiResponse"
              examples:
                response:
                  "$ref": '#/components/examples/UserRegisterResponseExample'

  /login:
    post:
      tags:
        - User
      summary: Check if a user is registered
      description: |
        This endpoint checks if a user is registered in the system by their email address.
      requestBody:
        description: User's email address
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: john.doe@example.com
                password:
                  type: string
                  example: Aa123456789
              required:
                - email
                - password
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - "$ref": "#/components/schemas/ApiResponse"
              examples:
                response:
                  "$ref": '#/components/examples/UserLoginResponseExample'

  /wifi_session/start:
    post:
      tags:
        - User
      summary: Start a new WiFi session for a user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: The email address of the user.
                  example: user@example.com
                end_time_in_min:
                  type: integer
                  description: The duration of the WiFi session in minutes.
                  example: 60
                price:
                  type: integer
                  description: WiFi session price.
                  example: 100

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - "$ref": "#/components/schemas/ApiResponse"
              examples:
                response:
                  "$ref": '#/components/examples/UserStartWifiSessionResponseExample'

  /wifi_session/is_expired:
    get:
      tags:
        - User
      summary: Check if WiFi session is expired for a user
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
          description: The email of the user to check the WiFi session for

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - "$ref": "#/components/schemas/ApiResponse"
              examples:
                response:
                  "$ref": '#/components/examples/UserIsWifiSessionExpiredResponseExample'

  /wifi_session/time_left:
    get:
      tags:
        - User
      summary: Get End Session Time
      description: Retrieve the end session time.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - "$ref": "#/components/schemas/ApiResponse"
              examples:
                response:
                  "$ref": '#/components/examples/UserWifiSessionTimeLeft'

  /admin/register:
    post:
      tags:
        - Admin
      security:
        - bearerAuth: []
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                company_name:
                  type: string
                  description: The name of the company making the request
                  example: Acme Inc.
                token:
                  type: string
                  description: The authentication token for the request
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                full_name:
                  type: string
                password:
                  type: string
                email:
                  type: string
                  format: email
              required:
                - full_name
                - password
                - email
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - "$ref": "#/components/schemas/ApiResponse"
              examples:
                response:
                  "$ref": '#/components/examples/AdminRegisterResponseExample'

  /admin/login:
    post:
      tags:
        - Admin
      security:
        - bearerAuth: []
      summary: Check if a user is registered
      description: |
        This endpoint checks if a user is registered in the system by their email address.
      requestBody:
        description: User's email address
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                company_name:
                  type: string
                  description: The name of the company making the request
                  example: Acme Inc.
                token:
                  type: string
                  description: The authentication token for the request
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                email:
                  type: string
                  example: john.doe@example.com
                password:
                  type: string
                  example: Aa123456789
              required:
                - email
                - password
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - "$ref": "#/components/schemas/ApiResponse"
              examples:
                response:
                  "$ref": '#/components/examples/AdminLoginResponseExample'

  /admin/get_current_balance:
    post:
      tags:
        - Admin
      security:
        - bearerAuth: []
      summary: Get the current balance for a given date range
      requestBody:
        description: The date range to retrieve the current balance for
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                company_name:
                  type: string
                  description: The name of the company making the request
                  example: Acme Inc.
                token:
                  type: string
                  description: The authentication token for the request
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                email:
                  type: string
                  format: email
                from_date:
                  type: string
                  format: date
                  pattern: "^\\d{2}/\\d{2}/\\d{4}$"
                  description: The start date of the ran (dd/mm/yyyy)
                to_date:
                  type: string
                  format: date
                  pattern: "^\\d{2}/\\d{2}/\\d{4}$"
                  description: The end date of the range (dd/mm/yyyy)
              required:
                - from_date
                - to_date
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - "$ref": "#/components/schemas/ApiResponse"
              examples:
                response:
                  "$ref": '#/components/examples/AdminGetCurrentBalanceResponseExample'


  /change_speed:
    post:
      tags:
        - Router
      summary: Limit Upload and Download Speed
      description: Limits the upload and download speed of a client
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - client_ip
                - upload_speed
                - download_speed
              properties:
                client_ip:
                  type: string
                  description: IP address of the client to limit the speed for
                upload_speed:
                  type: number
                  minimum: 1
                  description: Maximum upload speed limit in Mbps
                download_speed:
                  type: number
                  minimum: 1
                  description: Maximum download speed limit in Mbps
              example:
                client_ip: "192.168.0.100"
                upload_speed: 5
                download_speed: 10
      responses:
        200:
          description: OK
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
      x-swagger-router-controller: app
      operationId: limit_upload_download_speed
  /user_ip:
    get:
      tags:
        - Router
      summary: Get User IP
      description: Returns the IP address of the user making the request
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  ip:
                    type: string
      x-swagger-router-controller: app
      operationId: get_ip